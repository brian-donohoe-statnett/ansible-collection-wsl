---
- name: Install Kotlin packages
  shell: >
    source {{ sdkman_dir }}/bin/sdkman-init.sh &&
    sdk install {{ item.sdk }} {{ item.version | default('') }} {{ item.localpath | default('') }}
  args:
    executable: /bin/bash
  loop: "{{ sdkman_install_packages }}"
  register: sdk_install
  changed_when: |
    'is already installed.' not in sdk_install.stdout
  failed_when: |
    sdk_install.rc != 0 and 'is already installed.' not in sdk_install.stdout

- name: Uninstall SDK candidates/versions
  shell: >
    source {{ sdkman_dir }}/bin/sdkman-init.sh &&
    sdk uninstall {{ item.sdk }} {{ item.version }}
  args:
    executable: /bin/bash
  loop: "{{ sdkman_uninstall_packages }}"
  register: sdk_uninstall
  changed_when: not item.candidate + " " + item.version + " is not installed." in sdk_uninstall.stdout

- name: Get SDK defaults
  shell: source {{ sdkman_dir }}/bin/sdkman-init.sh && sdk current {{ item }}
  args:
    executable: /bin/bash
  register: get_sdk_defaults
  changed_when: false
  loop: "{{ sdkman_install_packages | map(attribute='sdk') | unique | list }}"

- name: Set SDK defaults
  shell: source {{ sdkman_dir }}/bin/sdkman-init.sh && sdk default {{ item.key }} {{ item.value }}
  args:
    executable: /bin/bash
  loop: "{{ sdkman_defaults | dict2items }}"
  changed_when: not item.value in (get_sdk_defaults.results | selectattr('item', 'equalto', item.key) | first).stdout
